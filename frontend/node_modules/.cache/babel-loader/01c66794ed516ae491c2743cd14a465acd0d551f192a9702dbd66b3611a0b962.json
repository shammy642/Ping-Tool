{"ast":null,"code":"import React,{createContext,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const ReceiverListContext=/*#__PURE__*/createContext(undefined);export const ReceiverListProvider=props=>{const[receiverList,setReceiverList]=useState();useEffect(()=>{fetchData();},[]);const fetchData=()=>{fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL),{method:\"GET\"}).then(response=>response.json()).then(data=>{console.log(data);setReceiverList(data);}).catch(error=>{console.log(error);});};const updateReceiverListState=state=>{setReceiverList(state);};return/*#__PURE__*/_jsx(ReceiverListContext.Provider,{value:{receiverList,updateReceiverListState},children:props.children});};","map":{"version":3,"names":["React","createContext","useEffect","useState","jsx","_jsx","ReceiverListContext","undefined","ReceiverListProvider","props","receiverList","setReceiverList","fetchData","fetch","concat","process","env","REACT_APP_BACKEND_URL","method","then","response","json","data","console","log","catch","error","updateReceiverListState","state","Provider","value","children"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/State Management/ReceiverListContext.tsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\nexport type ReceiverObjectProps = {\n  id: number;\n  name: string;\n  IP: string;\n  device: string;\n  type: string;\n  isSelected: string;\n}\n\nexport type ReceiverListContextType = {\n  receiverList: ReceiverObjectProps[] | undefined;\n  updateReceiverListState: (state:ReceiverObjectProps[]) => void;\n}\n\nexport const ReceiverListContext = createContext<ReceiverListContextType | undefined>(undefined);\n\ntype ReceiverListProps = {\n  children: React.ReactNode;\n}\n\nexport const ReceiverListProvider = (props: ReceiverListProps) => {\n  const [receiverList, setReceiverList] = useState<ReceiverObjectProps[] | undefined>();\n  \n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}`, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        setReceiverList(data)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const updateReceiverListState = (state:ReceiverObjectProps[]) => {\n    setReceiverList(state)\n  }\n\n  return (\n    <ReceiverListContext.Provider value={{ receiverList, updateReceiverListState }}>\n      {props.children}\n    </ReceiverListContext.Provider>\n  )\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAgBlE,MAAO,MAAM,CAAAC,mBAAmB,cAAGL,aAAa,CAAsCM,SAAS,CAAC,CAMhG,MAAO,MAAM,CAAAC,oBAAoB,CAAIC,KAAwB,EAAK,CAChE,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAoC,CAAC,CAErFD,SAAS,CAAC,IAAM,CACdU,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,SAAS,CAAGA,CAAA,GAAM,CACtBC,KAAK,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,qBAAqB,EAAI,CAC5CC,MAAM,CAAE,KACV,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,EAAK,CACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CACjBX,eAAe,CAACW,IAAI,CAAC,CACvB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,EAAK,CAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CACpB,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAC,uBAAuB,CAAIC,KAA2B,EAAK,CAC/DjB,eAAe,CAACiB,KAAK,CAAC,CACxB,CAAC,CAED,mBACEvB,IAAA,CAACC,mBAAmB,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAEpB,YAAY,CAAEiB,uBAAwB,CAAE,CAAAI,QAAA,CAC5EtB,KAAK,CAACsB,QAAQ,CACa,CAAC,CAEnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { ReceiverListContext } from \"../../State Management/ReceiverListContext\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  const {\n    receiverList\n  } = useContext(ReceiverListContext) || {};\n  const getReceiverTypes = () => {\n    let types = [];\n    for (let receiver in receiverList) {}\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: receiverList && receiverList.map(receiver => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: \"bold\",\n        children: receiver.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, receiver.type, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useContext","ReceiverListContext","Grid","Typography","jsxDEV","_jsxDEV","MainPage","_s","receiverList","getReceiverTypes","types","receiver","container","children","map","item","xs","sm","md","variant","fontWeight","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { ReceiverListContext, ReceiverListContextType, ReceiverObjectProps } from \"../../State Management/ReceiverListContext\";\nimport {  Grid, Typography } from \"@mui/material\";\nimport { DeviceBig } from \"./DeviceBig\";\n\n\n\nexport const MainPage = () => {\n    const { receiverList } = useContext(ReceiverListContext) || {};\n\n    const getReceiverTypes = () => {\n        let types: string[] = [];\n        for ( let receiver in receiverList) {\n            \n        }\n\n    }\n    \n    return (\n        <Grid container >\n            {receiverList && receiverList.map((receiver) => (\n            \n                <Grid item xs={12} sm={6} md={2} key={receiver.type}>\n                    <Typography variant=\"h6\" fontWeight='bold'>{receiver.type}</Typography>\n                    {/* {receiverList.map(receiver => (\n                        <Grid item xs={12} key={receiver.id} >\n                            <DeviceBig key={receiver.id} id={receiver.id} name={receiver.name} IP={receiver.IP}/>\n                        </Grid>\n                    ))} */}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,mBAAmB,QAAsD,4CAA4C;AAC9H,SAAUC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKlD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAa,CAAC,GAAGR,UAAU,CAACC,mBAAmB,CAAC,IAAI,CAAC,CAAC;EAE9D,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIC,KAAe,GAAG,EAAE;IACxB,KAAM,IAAIC,QAAQ,IAAIH,YAAY,EAAE,CAEpC;EAEJ,CAAC;EAED,oBACIH,OAAA,CAACH,IAAI;IAACU,SAAS;IAAAC,QAAA,EACVL,YAAY,IAAIA,YAAY,CAACM,GAAG,CAAEH,QAAQ,iBAEvCN,OAAA,CAACH,IAAI;MAACa,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAL,QAAA,eAC5BR,OAAA,CAACF,UAAU;QAACgB,OAAO,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAAAP,QAAA,EAAEF,QAAQ,CAACU;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC,GADrCd,QAAQ,CAACU,IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO7C,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAAAlB,EAAA,CA1BYD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
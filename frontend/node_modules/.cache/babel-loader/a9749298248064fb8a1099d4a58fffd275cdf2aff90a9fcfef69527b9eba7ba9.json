{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { ReceiverListContext } from \"../../State Management/ReceiverListContext\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { DeviceBig } from \"./DeviceBig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  const {\n    receiverList\n  } = useContext(ReceiverListContext) || {};\n  const [receiverTypes, setReceiverTypes] = useState([]);\n  useEffect(() => {\n    if (receiverList) {\n      let receiverTypesList = [];\n      receiverList.forEach(receiver => {\n        if (!receiverTypesList.includes(receiver.type)) {\n          receiverTypesList.push(receiver.type);\n        }\n      });\n      setReceiverTypes(receiverTypesList);\n    }\n  }, [receiverList]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: receiverTypes.map(receiverType => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: \"bold\",\n          children: receiverType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), receiverList && receiverList.filter(receiver => receiver.type === receiverType && receiver.isSelected).map(receiver => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(DeviceBig, {\n              IP: receiver.IP,\n              id: receiver.id,\n              name: receiver.name\n            }, \"deviceBig\" + receiver.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 36\n          }, this);\n        })]\n      }, receiverType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"dClh4FJaKNEPmnppH3TnUQWvVYk=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useContext","useEffect","useState","ReceiverListContext","Grid","Typography","DeviceBig","jsxDEV","_jsxDEV","MainPage","_s","receiverList","receiverTypes","setReceiverTypes","receiverTypesList","forEach","receiver","includes","type","push","container","children","map","receiverType","item","xs","sm","md","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","filter","isSelected","IP","id","name","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { ReceiverListContext, ReceiverListContextType, ReceiverObjectProps } from \"../../State Management/ReceiverListContext\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { DeviceBig } from \"./DeviceBig\";\n\n\n\nexport const MainPage = () => {\n    const { receiverList } = useContext(ReceiverListContext) || {};\n    const [receiverTypes, setReceiverTypes] = useState<string[]>([]);\n\n    useEffect(() => {\n        if (receiverList) {\n            let receiverTypesList: string[] = [];\n            receiverList.forEach((receiver) => {\n                if (!receiverTypesList.includes(receiver.type)) {\n                    receiverTypesList.push(receiver.type)\n                }\n            })\n            setReceiverTypes(receiverTypesList)\n        }\n    }, [receiverList])\n\n\n\n    return (\n        <Grid container >\n            {receiverTypes.map((receiverType) => {\n                return <Grid item xs={12} sm={6} md={2} key={receiverType}>\n                    <Typography variant=\"h6\" fontWeight='bold'>{receiverType}</Typography>\n                    {receiverList && receiverList\n                        .filter((receiver => (receiver.type === receiverType) && receiver.isSelected))\n                        .map((receiver) => {\n                            return <Grid item xs={12}>\n                                <DeviceBig key={\"deviceBig\" + receiver.id} IP={receiver.IP} id={receiver.id} name={receiver.name}/>\n                            </Grid>\n                        })}\n                </Grid>\n            })}\n        </Grid>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,mBAAmB,QAAsD,4CAA4C;AAC9H,SAASC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAChD,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAa,CAAC,GAAGX,UAAU,CAACG,mBAAmB,CAAC,IAAI,CAAC,CAAC;EAC9D,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EAEhED,SAAS,CAAC,MAAM;IACZ,IAAIU,YAAY,EAAE;MACd,IAAIG,iBAA2B,GAAG,EAAE;MACpCH,YAAY,CAACI,OAAO,CAAEC,QAAQ,IAAK;QAC/B,IAAI,CAACF,iBAAiB,CAACG,QAAQ,CAACD,QAAQ,CAACE,IAAI,CAAC,EAAE;UAC5CJ,iBAAiB,CAACK,IAAI,CAACH,QAAQ,CAACE,IAAI,CAAC;QACzC;MACJ,CAAC,CAAC;MACFL,gBAAgB,CAACC,iBAAiB,CAAC;IACvC;EACJ,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAIlB,oBACIH,OAAA,CAACJ,IAAI;IAACgB,SAAS;IAAAC,QAAA,EACVT,aAAa,CAACU,GAAG,CAAEC,YAAY,IAAK;MACjC,oBAAOf,OAAA,CAACJ,IAAI;QAACoB,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAN,QAAA,gBACnCb,OAAA,CAACH,UAAU;UAACuB,OAAO,EAAC,IAAI;UAACC,UAAU,EAAC,MAAM;UAAAR,QAAA,EAAEE;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,EACrEtB,YAAY,IAAIA,YAAY,CACxBuB,MAAM,CAAElB,QAAQ,IAAKA,QAAQ,CAACE,IAAI,KAAKK,YAAY,IAAKP,QAAQ,CAACmB,UAAW,CAAC,CAC7Eb,GAAG,CAAEN,QAAQ,IAAK;UACf,oBAAOR,OAAA,CAACJ,IAAI;YAACoB,IAAI;YAACC,EAAE,EAAE,EAAG;YAAAJ,QAAA,eACrBb,OAAA,CAACF,SAAS;cAAiC8B,EAAE,EAAEpB,QAAQ,CAACoB,EAAG;cAACC,EAAE,EAAErB,QAAQ,CAACqB,EAAG;cAACC,IAAI,EAAEtB,QAAQ,CAACsB;YAAK,GAAjF,WAAW,GAAGtB,QAAQ,CAACqB,EAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAyD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjG,CAAC;QACX,CAAC,CAAC;MAAA,GARmCV,YAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASnD,CAAC;IACX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAAAvB,EAAA,CAlCYD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/State Management/WebsocketPingsContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport WebSocket from 'ws';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WebsocketPingsContext = /*#__PURE__*/createContext(undefined);\nexport const WebsocketPingsProvider = children => {\n  _s();\n  const [pingInfo, setPingInfo] = useState();\n  const [socketReady, setSocketReady] = useState(false);\n  const ws = new WebSocket(\"ws://127.0.0.1:3001\");\n  useEffect(() => {\n    // Connection opened\n    ws.addEventListener(\"open\", event => {\n      console.log(\"open\");\n    });\n    ws.addEventListener(\"message\", event => {\n      console.log(\"Message from server \", event.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WebsocketPingsContext.Provider, {\n    value: {\n      pingInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(WebsocketPingsProvider, \"VUPTjJxrHI7y2PeNj6NuNXg+hPM=\");\n_c = WebsocketPingsProvider;\nvar _c;\n$RefreshReg$(_c, \"WebsocketPingsProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","WebSocket","jsxDEV","_jsxDEV","WebsocketPingsContext","undefined","WebsocketPingsProvider","children","_s","pingInfo","setPingInfo","socketReady","setSocketReady","ws","addEventListener","event","console","log","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/State Management/WebsocketPingsContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport WebSocket from 'ws';\n\nexport type PingResult = {\n    id: number;\n    ping: number;\n}\n\nexport type WebsocketPingsContextType = {\n    pingInfo: PingResult[] | undefined;\n    \n}\n\nexport const WebsocketPingsContext = createContext<WebsocketPingsContextType | undefined>(undefined)\n\n\nexport const WebsocketPingsProvider = (children: React.ReactNode) => {\n    const [pingInfo, setPingInfo] = useState<PingResult[] | undefined>();\n    const [socketReady, setSocketReady] = useState(false)\n    const ws = new WebSocket(\"ws://127.0.0.1:3001\")\n    \n    useEffect(() => {\n        \n    \n        // Connection opened\n        ws.addEventListener(\"open\", (event) => {\n          console.log(\"open\")\n        })\n\n        \n        ws.addEventListener(\"message\", (event) => {\n          console.log(\"Message from server \", event.data)\n        })\n        \n      }, [])\n\n\n    return (\n        <WebsocketPingsContext.Provider value={{ pingInfo }}>\n            {children}\n        </WebsocketPingsContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY3B,OAAO,MAAMC,qBAAqB,gBAAGN,aAAa,CAAwCO,SAAS,CAAC;AAGpG,OAAO,MAAMC,sBAAsB,GAAIC,QAAyB,IAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAA2B,CAAC;EACpE,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMa,EAAE,GAAG,IAAIZ,SAAS,CAAC,qBAAqB,CAAC;EAE/CF,SAAS,CAAC,MAAM;IAGZ;IACAc,EAAE,CAACC,gBAAgB,CAAC,MAAM,EAAGC,KAAK,IAAK;MACrCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACrB,CAAC,CAAC;IAGFJ,EAAE,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;MACxCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAACG,IAAI,CAAC;IACjD,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EAGR,oBACIf,OAAA,CAACC,qBAAqB,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEX;IAAS,CAAE;IAAAF,QAAA,EAC/CA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEzC,CAAC;AAAAhB,EAAA,CA1BYF,sBAAsB;AAAAmB,EAAA,GAAtBnB,sBAAsB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
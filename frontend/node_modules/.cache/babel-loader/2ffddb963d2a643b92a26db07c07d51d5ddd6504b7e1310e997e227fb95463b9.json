{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/State Management/WebsocketPingsContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport useWebSocket from 'react-use-websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WebsocketPingsContext = /*#__PURE__*/createContext(undefined);\nexport const WebsocketPingsProvider = children => {\n  _s();\n  const [pingInfo, setPingInfo] = useState();\n  const {\n    lastJsonMessage,\n    ReadyState\n  } = useWebSocket(\"ws://localhost:3001\", {\n    share: false,\n    shouldReconnect: () => true\n  });\n  useEffect(() => {\n    setPingInfo(lastJsonMessage);\n    console.log(\"Websocket connection status: \", readyState);\n    console.log(lastJsonMessage);\n  }, [lastJsonMessage, readyState, connectionStatus]);\n  return /*#__PURE__*/_jsxDEV(WebsocketPingsContext.Provider, {\n    value: {\n      pingInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(WebsocketPingsProvider, \"W68q5E7WDb34hJBIwGZsIVrQ1Mw=\", false, function () {\n  return [useWebSocket];\n});\n_c = WebsocketPingsProvider;\nvar _c;\n$RefreshReg$(_c, \"WebsocketPingsProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useWebSocket","jsxDEV","_jsxDEV","WebsocketPingsContext","undefined","WebsocketPingsProvider","children","_s","pingInfo","setPingInfo","lastJsonMessage","ReadyState","share","shouldReconnect","console","log","readyState","connectionStatus","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/State Management/WebsocketPingsContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\n\nexport type PingResult = {\n    id: number;\n    ping: number;\n}\n\nexport type WebsocketPingsContextType = {\n    pingInfo: PingResult[] | undefined;\n    \n}\n\nexport const WebsocketPingsContext = createContext<WebsocketPingsContextType | undefined>(undefined)\n\n\nexport const WebsocketPingsProvider = (children: React.ReactNode) => {\n    const [pingInfo, setPingInfo] = useState<PingResult[] | undefined>();\n    const { lastJsonMessage, ReadyState } = useWebSocket(\"ws://localhost:3001\",{\n        share: false,\n        shouldReconnect: () => true,\n      },);\n\n\n    useEffect(()=> {\n        \n            setPingInfo(lastJsonMessage)\n            console.log(\"Websocket connection status: \", readyState)\n            console.log(lastJsonMessage)\n        \n    }, [lastJsonMessage, readyState, connectionStatus])\n\n    return (\n        <WebsocketPingsContext.Provider value={{ pingInfo }}>\n            {children}\n        </WebsocketPingsContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,YAAY,MAAsB,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY/D,OAAO,MAAMC,qBAAqB,gBAAGN,aAAa,CAAwCO,SAAS,CAAC;AAGpG,OAAO,MAAMC,sBAAsB,GAAIC,QAAyB,IAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAA2B,CAAC;EACpE,MAAM;IAAEW,eAAe;IAAEC;EAAW,CAAC,GAAGX,YAAY,CAAC,qBAAqB,EAAC;IACvEY,KAAK,EAAE,KAAK;IACZC,eAAe,EAAEA,CAAA,KAAM;EACzB,CAAE,CAAC;EAGLf,SAAS,CAAC,MAAK;IAEPW,WAAW,CAACC,eAAe,CAAC;IAC5BI,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,UAAU,CAAC;IACxDF,OAAO,CAACC,GAAG,CAACL,eAAe,CAAC;EAEpC,CAAC,EAAE,CAACA,eAAe,EAAEM,UAAU,EAAEC,gBAAgB,CAAC,CAAC;EAEnD,oBACIf,OAAA,CAACC,qBAAqB,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEX;IAAS,CAAE;IAAAF,QAAA,EAC/CA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEzC,CAAC;AAAAhB,EAAA,CArBYF,sBAAsB;EAAA,QAESL,YAAY;AAAA;AAAAwB,EAAA,GAF3CnB,sBAAsB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
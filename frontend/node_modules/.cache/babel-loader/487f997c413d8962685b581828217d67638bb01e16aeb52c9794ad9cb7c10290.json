{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { ReceiverListContext } from \"../../State Management/ReceiverListContext\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { DeviceBig } from \"./DeviceBig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  const {\n    receiverList\n  } = useContext(ReceiverListContext) || {};\n  const [receiverListByType, setReceiverListByType] = useState();\n  receiverList === null || receiverList === void 0 ? void 0 : receiverList.reduce((types, receiver) => {\n    const type = receiver.type;\n    //If type key doesn't exist yet in accumulator (types), add it\n    if (!types[type]) {\n      types[type] = [];\n    }\n    if (Boolean(receiver.isSelected)) {\n      types[type].push(receiver);\n    }\n    return types;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: receiverListByType && Object.entries(receiverListByType).map(([type, receivers]) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: \"bold\",\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), receivers.map(receiver => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DeviceBig, {\n          id: receiver.id,\n          name: receiver.name,\n          IP: receiver.IP\n        }, receiver.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, receiver.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))]\n    }, type, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"P20zcaHBTGu1AzKNRcnA8bkjM/Y=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useContext","useState","ReceiverListContext","Grid","Typography","DeviceBig","jsxDEV","_jsxDEV","MainPage","_s","receiverList","receiverListByType","setReceiverListByType","reduce","types","receiver","type","Boolean","isSelected","push","container","children","Object","entries","map","receivers","item","xs","sm","md","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","id","name","IP","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { ReceiverListContext, ReceiverObjectProps } from \"../../State Management/ReceiverListContext\";\nimport {  Grid, Typography } from \"@mui/material\";\nimport { DeviceBig } from \"./DeviceBig\";\n\ntype ReceiverListByType = {\n    [key: string]: ReceiverObjectProps[]\n}\n\nexport const MainPage = () => {\n    const { receiverList } = useContext(ReceiverListContext) || {};\n    const [ receiverListByType, setReceiverListByType] = useState()\n        receiverList?.reduce<ReceiverListByType>((types, receiver) => {\n        const type = receiver.type;\n        //If type key doesn't exist yet in accumulator (types), add it\n        if (!types[type]) {\n            types[type] = [];\n        }\n        if (Boolean(receiver.isSelected)) {\n            types[type].push(receiver);\n        }\n        return types;\n    }, {});\n    \n    return (\n        <Grid container >\n            {receiverListByType && Object.entries(receiverListByType).map(([type, receivers]) => (\n                <Grid item xs={12} sm={6} md={2} key={type}>\n                    <Typography variant=\"h6\" fontWeight='bold'>{type}</Typography>\n                    {receivers.map(receiver => (\n                        <Grid item xs={12} key={receiver.id} >\n                            <DeviceBig key={receiver.id} id={receiver.id} name={receiver.name} IP={receiver.IP}/>\n                        </Grid>\n                    ))}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,mBAAmB,QAA6B,4CAA4C;AACrG,SAAUC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AACjD,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAa,CAAC,GAAGV,UAAU,CAACE,mBAAmB,CAAC,IAAI,CAAC,CAAC;EAC9D,MAAM,CAAES,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAC3DS,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,MAAM,CAAqB,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC9D,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;IAC1B;IACA,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,EAAE;MACdF,KAAK,CAACE,IAAI,CAAC,GAAG,EAAE;IACpB;IACA,IAAIC,OAAO,CAACF,QAAQ,CAACG,UAAU,CAAC,EAAE;MAC9BJ,KAAK,CAACE,IAAI,CAAC,CAACG,IAAI,CAACJ,QAAQ,CAAC;IAC9B;IACA,OAAOD,KAAK;EAChB,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACIP,OAAA,CAACJ,IAAI;IAACiB,SAAS;IAAAC,QAAA,EACVV,kBAAkB,IAAIW,MAAM,CAACC,OAAO,CAACZ,kBAAkB,CAAC,CAACa,GAAG,CAAC,CAAC,CAACR,IAAI,EAAES,SAAS,CAAC,kBAC5ElB,OAAA,CAACJ,IAAI;MAACuB,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAR,QAAA,gBAC5Bd,OAAA,CAACH,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAAAV,QAAA,EAAEL;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,EAC7DV,SAAS,CAACD,GAAG,CAACT,QAAQ,iBACnBR,OAAA,CAACJ,IAAI;QAACuB,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAN,QAAA,eACdd,OAAA,CAACF,SAAS;UAAmB+B,EAAE,EAAErB,QAAQ,CAACqB,EAAG;UAACC,IAAI,EAAEtB,QAAQ,CAACsB,IAAK;UAACC,EAAE,EAAEvB,QAAQ,CAACuB;QAAG,GAAnEvB,QAAQ,CAACqB,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyD;MAAC,GADjEpB,QAAQ,CAACqB,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7B,CACT,CAAC;IAAA,GANgCnB,IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOpC,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAAA1B,EAAA,CA7BYD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
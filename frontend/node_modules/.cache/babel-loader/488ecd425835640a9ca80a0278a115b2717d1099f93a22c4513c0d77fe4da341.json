{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSocketIO = void 0;\nvar react_1 = require(\"react\");\nvar use_websocket_1 = require(\"./use-websocket\");\nvar constants_1 = require(\"./constants\");\nvar emptyEvent = {\n  type: 'empty',\n  payload: null\n};\nvar getSocketData = function (event) {\n  if (!event || !event.data) {\n    return emptyEvent;\n  }\n  var match = event.data.match(/\\[.*]/);\n  if (!match) {\n    return emptyEvent;\n  }\n  var data = JSON.parse(match);\n  if (!Array.isArray(data) || !data[1]) {\n    return emptyEvent;\n  }\n  return {\n    type: data[0],\n    payload: data[1]\n  };\n};\nexports.useSocketIO = function (url, options, connect) {\n  if (options === void 0) {\n    options = constants_1.DEFAULT_OPTIONS;\n  }\n  if (connect === void 0) {\n    connect = true;\n  }\n  var optionsWithSocketIO = react_1.useMemo(function () {\n    return __assign(__assign({}, options), {\n      fromSocketIO: true\n    });\n  }, []);\n  var _a = use_websocket_1.useWebSocket(url, optionsWithSocketIO, connect),\n    sendMessage = _a.sendMessage,\n    sendJsonMessage = _a.sendJsonMessage,\n    lastMessage = _a.lastMessage,\n    readyState = _a.readyState,\n    getWebSocket = _a.getWebSocket;\n  var socketIOLastMessage = react_1.useMemo(function () {\n    return getSocketData(lastMessage);\n  }, [lastMessage]);\n  return {\n    sendMessage: sendMessage,\n    sendJsonMessage: sendJsonMessage,\n    lastMessage: socketIOLastMessage,\n    lastJsonMessage: socketIOLastMessage,\n    readyState: readyState,\n    getWebSocket: getWebSocket\n  };\n};","map":{"version":3,"names":["react_1","require","use_websocket_1","constants_1","emptyEvent","type","payload","getSocketData","event","data","match","JSON","parse","Array","isArray","exports","useSocketIO","url","options","connect","DEFAULT_OPTIONS","optionsWithSocketIO","useMemo","__assign","fromSocketIO","_a","useWebSocket","sendMessage","sendJsonMessage","lastMessage","readyState","getWebSocket","socketIOLastMessage","lastJsonMessage"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/node_modules/react-use-websocket/src/lib/use-socket-io.ts"],"sourcesContent":["import { useMemo } from 'react'\nimport { useWebSocket } from './use-websocket'\nimport { DEFAULT_OPTIONS } from './constants'\nimport { Options, WebSocketHook } from './types';\n\nexport interface SocketIOMessageData {\n  type: string,\n  payload: any,\n}\n\nconst emptyEvent: SocketIOMessageData = {\n  type: 'empty',\n  payload: null,\n}\n\nconst getSocketData = (event: WebSocketEventMap['message'] | null): SocketIOMessageData => {\n  if (!event || !event.data) {\n    return emptyEvent\n  }\n\n  const match = event.data.match(/\\[.*]/)\n\n  if (!match) {\n    return emptyEvent\n  }\n\n  const data = JSON.parse(match)\n\n  if (!Array.isArray(data) || !data[1]) {\n    return emptyEvent\n  }\n\n  return {\n    type: data[0],\n    payload: data[1],\n  }\n}\n\nexport const useSocketIO = (\n  url: string | (() => string | Promise<string>) | null,\n  options: Options = DEFAULT_OPTIONS,\n  connect: boolean = true,\n): WebSocketHook<SocketIOMessageData> => {\n  const optionsWithSocketIO = useMemo(() => ({\n    ...options,\n    fromSocketIO: true,\n  }), [])\n\n  const {\n    sendMessage,\n    sendJsonMessage,\n    lastMessage,\n    readyState,\n    getWebSocket,\n  } = useWebSocket(\n\n    url,\n    optionsWithSocketIO,\n    connect,\n  );\n\n  const socketIOLastMessage = useMemo(() =>\n    getSocketData(lastMessage), [lastMessage]);\n\n  return {\n    sendMessage,\n    sendJsonMessage,\n    lastMessage: socketIOLastMessage,\n    lastJsonMessage: socketIOLastMessage,\n    readyState,\n    getWebSocket,\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAQA,IAAMG,UAAU,GAAwB;EACtCC,IAAI,EAAE,OAAO;EACbC,OAAO,EAAE;CACV;AAED,IAAMC,aAAa,GAAG,SAAAA,CAACC,KAA0C;EAC/D,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,EAAE;IACzB,OAAOL,UAAU;;EAGnB,IAAMM,KAAK,GAAGF,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;EAEvC,IAAI,CAACA,KAAK,EAAE;IACV,OAAON,UAAU;;EAGnB,IAAMK,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;EAE9B,IAAI,CAACG,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,EAAE;IACpC,OAAOL,UAAU;;EAGnB,OAAO;IACLC,IAAI,EAAEI,IAAI,CAAC,CAAC,CAAC;IACbH,OAAO,EAAEG,IAAI,CAAC,CAAC;GAChB;AACH,CAAC;AAEYM,OAAA,CAAAC,WAAW,GAAG,UACzBC,GAAqD,EACrDC,OAAkC,EAClCC,OAAuB;EADvB,IAAAD,OAAA;IAAAA,OAAA,GAAmBf,WAAA,CAAAiB,eAAe;EAAA;EAClC,IAAAD,OAAA;IAAAA,OAAA,OAAuB;EAAA;EAEvB,IAAME,mBAAmB,GAAGrB,OAAA,CAAAsB,OAAO,CAAC;IAAM,OAAAC,QAAA,CAAAA,QAAA,KACrCL,OAAO;MACVM,YAAY,EAAE;IAAI;EAFsB,CAGxC,EAAE,EAAE,CAAC;EAED,IAAAC,EAAA,GAMFvB,eAAA,CAAAwB,YAAY,CAEdT,GAAG,EACHI,mBAAmB,EACnBF,OAAO,CACR;IAVCQ,WAAW,GAAAF,EAAA,CAAAE,WAAA;IACXC,eAAe,GAAAH,EAAA,CAAAG,eAAA;IACfC,WAAW,GAAAJ,EAAA,CAAAI,WAAA;IACXC,UAAU,GAAAL,EAAA,CAAAK,UAAA;IACVC,YAAY,GAAAN,EAAA,CAAAM,YAMb;EAED,IAAMC,mBAAmB,GAAGhC,OAAA,CAAAsB,OAAO,CAAC;IAClC,OAAAf,aAAa,CAACsB,WAAW,CAAC;EAA1B,CAA0B,EAAE,CAACA,WAAW,CAAC,CAAC;EAE5C,OAAO;IACLF,WAAW,EAAAA,WAAA;IACXC,eAAe,EAAAA,eAAA;IACfC,WAAW,EAAEG,mBAAmB;IAChCC,eAAe,EAAED,mBAAmB;IACpCF,UAAU,EAAAA,UAAA;IACVC,YAAY,EAAAA;GACb;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
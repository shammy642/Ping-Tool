{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { ReceiverListContext } from \"../../State Management/ReceiverListContext\";\nimport { Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  const receiverList = useContext(ReceiverListContext);\n  const receiverListByType = receiverList === null || receiverList === void 0 ? void 0 : receiverList.reduce((types, receiver) => {\n    const type = receiver.type;\n    //If type key doesn't exist yet in acc (types), add it\n    if (!types[type]) {\n      types[type] = [];\n    }\n    types[type].push(receiver);\n    return types;\n  }, {});\n  console.log(receiverListByType);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: receiverListByType && receiverListByType[\"Bass Drum\"].map(item => item.device)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"tNne+gaEVbKDeOPFuBx+2OkpSMQ=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useContext","ReceiverListContext","Box","jsxDEV","_jsxDEV","MainPage","_s","receiverList","receiverListByType","reduce","types","receiver","type","push","console","log","children","map","item","device","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { ReceiverListContext, ReceiverObjectProps } from \"../../State Management/ReceiverListContext\";\nimport { Box } from \"@mui/material\";\n\ntype ReceiverListByType = {\n    [key: string]: ReceiverObjectProps[]\n}\n\n\nexport const MainPage = () => {\n    const receiverList = useContext(ReceiverListContext);\n\n    const receiverListByType = receiverList?.reduce<ReceiverListByType>((types, receiver) => {\n        const type = receiver.type;\n        //If type key doesn't exist yet in acc (types), add it\n        if (!types[type]) {\n            types[type] = [];\n        }\n        types[type].push(receiver);\n        return types;\n    }, {});\n    console.log(receiverListByType)\n    return (\n        <Box>\n            {receiverListByType && receiverListByType[\"Bass Drum\"].map(item => item.device)}\n        </Box>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,mBAAmB,QAA6B,4CAA4C;AACrG,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,YAAY,GAAGP,UAAU,CAACC,mBAAmB,CAAC;EAEpD,MAAMO,kBAAkB,GAAGD,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,MAAM,CAAqB,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACrF,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;IAC1B;IACA,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,EAAE;MACdF,KAAK,CAACE,IAAI,CAAC,GAAG,EAAE;IACpB;IACAF,KAAK,CAACE,IAAI,CAAC,CAACC,IAAI,CAACF,QAAQ,CAAC;IAC1B,OAAOD,KAAK;EAChB,CAAC,EAAE,CAAC,CAAC,CAAC;EACNI,OAAO,CAACC,GAAG,CAACP,kBAAkB,CAAC;EAC/B,oBACIJ,OAAA,CAACF,GAAG;IAAAc,QAAA,EACCR,kBAAkB,IAAIA,kBAAkB,CAAC,WAAW,CAAC,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEd,CAAC;AAAAjB,EAAA,CAlBYD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
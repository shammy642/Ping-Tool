{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorDevices/MonitorDevices.tsx\",\n  _s = $RefreshSig$();\nimport { CssBaseline, IconButton, Toolbar, Typography } from '@mui/material';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport React, { useState } from 'react';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  })\n}));\n_c = AppBar;\nexport const MonitorDevices = () => {\n  _s();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          sx: {\n            mr: 2,\n            ...(open && {\n              display: 'none'\n            })\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            padding: 1,\n            children: \"Device List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(MonitorDevices, \"wGmR9/hunq3L23vhfiuhNflRfmI=\", false, function () {\n  return [useTheme];\n});\n_c2 = MonitorDevices;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppBar\");\n$RefreshReg$(_c2, \"MonitorDevices\");","map":{"version":3,"names":["CssBaseline","IconButton","Toolbar","Typography","MuiAppBar","Box","React","useState","MenuIcon","styled","useTheme","jsxDEV","_jsxDEV","drawerWidth","AppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","_c","MonitorDevices","_s","setOpen","handleDrawerOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","position","color","onClick","edge","sx","mr","display","padding","_c2","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorDevices/MonitorDevices.tsx"],"sourcesContent":["import { CssBaseline, IconButton, Toolbar, Typography} from '@mui/material';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport React, { useState } from 'react';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { styled, useTheme } from '@mui/material/styles';\n\nconst drawerWidth = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n    open?: boolean;\n  }\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })<AppBarProps>(({ theme, open }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: `${drawerWidth}px`,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\nexport const MonitorDevices = () => {\n    const theme = useTheme();\n    const [open, setOpen] = useState(false)\n\n    const handleDrawerOpen = () => {\n        setOpen(true)\n    }\n    return (\n        <Box>\n            <CssBaseline />\n            <AppBar position=\"fixed\" open={open}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{ mr: 2, ...(open && { display: 'none' }) }}\n                    >\n                        <MenuIcon />\n                        <Typography padding={1}>Device List</Typography>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
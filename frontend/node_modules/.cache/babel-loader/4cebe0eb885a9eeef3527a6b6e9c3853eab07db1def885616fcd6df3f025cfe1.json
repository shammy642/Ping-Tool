{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { ReceiverListContext } from \"../../State Management/ReceiverListContext\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  const {\n    receiverList\n  } = useContext(ReceiverListContext) || {};\n  const [receiverTypes, setReceiverTypes] = useState([]);\n  useEffect(() => {\n    let recevierTypes;\n    receiverList === null || receiverList === void 0 ? void 0 : receiverList.forEach(receiver => {\n      if (!recevierTypes.includes(receiver.type)) {\n        recevierTypes.push(receiver.type);\n      }\n    });\n    setReceiverTypes(receiverTypes);\n  }, [receiverList, receiverTypes]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: receiverList && receiverList.map(receiver => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: \"bold\",\n        children: receiver.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, receiver.type, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"dClh4FJaKNEPmnppH3TnUQWvVYk=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["useContext","useEffect","useState","ReceiverListContext","Grid","Typography","jsxDEV","_jsxDEV","MainPage","_s","receiverList","receiverTypes","setReceiverTypes","recevierTypes","forEach","receiver","includes","type","push","container","children","map","item","xs","sm","md","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/pages/monitorReceivers/mainPage.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { ReceiverListContext, ReceiverListContextType, ReceiverObjectProps } from \"../../State Management/ReceiverListContext\";\nimport {  Grid, Typography } from \"@mui/material\";\nimport { DeviceBig } from \"./DeviceBig\";\n\n\n\nexport const MainPage = () => {\n    const { receiverList } = useContext(ReceiverListContext) || {};\n    const [receiverTypes, setReceiverTypes] = useState<string[]>([]);\n    \n    useEffect(() => {\n        let recevierTypes: string[];\n        receiverList?.forEach((receiver) => {\n            if (!recevierTypes.includes(receiver.type)) {\n                recevierTypes.push(receiver.type)\n            }\n        })\n        setReceiverTypes(receiverTypes)\n    },[receiverList, receiverTypes])\n        \n\n    \n    \n    return (\n        <Grid container >\n            {receiverList && receiverList.map((receiver) => (\n            \n                <Grid item xs={12} sm={6} md={2} key={receiver.type}>\n                    <Typography variant=\"h6\" fontWeight='bold'>{receiver.type}</Typography>\n                    {/* {receiverList.map(receiver => (\n                        <Grid item xs={12} key={receiver.id} >\n                            <DeviceBig key={receiver.id} id={receiver.id} name={receiver.name} IP={receiver.IP}/>\n                        </Grid>\n                    ))} */}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,mBAAmB,QAAsD,4CAA4C;AAC9H,SAAUC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKlD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAa,CAAC,GAAGV,UAAU,CAACG,mBAAmB,CAAC,IAAI,CAAC,CAAC;EAC9D,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAEhED,SAAS,CAAC,MAAM;IACZ,IAAIY,aAAuB;IAC3BH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,OAAO,CAAEC,QAAQ,IAAK;MAChC,IAAI,CAACF,aAAa,CAACG,QAAQ,CAACD,QAAQ,CAACE,IAAI,CAAC,EAAE;QACxCJ,aAAa,CAACK,IAAI,CAACH,QAAQ,CAACE,IAAI,CAAC;MACrC;IACJ,CAAC,CAAC;IACFL,gBAAgB,CAACD,aAAa,CAAC;EACnC,CAAC,EAAC,CAACD,YAAY,EAAEC,aAAa,CAAC,CAAC;EAKhC,oBACIJ,OAAA,CAACH,IAAI;IAACe,SAAS;IAAAC,QAAA,EACVV,YAAY,IAAIA,YAAY,CAACW,GAAG,CAAEN,QAAQ,iBAEvCR,OAAA,CAACH,IAAI;MAACkB,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAL,QAAA,eAC5Bb,OAAA,CAACF,UAAU;QAACqB,OAAO,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAAAP,QAAA,EAAEL,QAAQ,CAACE;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC,GADrChB,QAAQ,CAACE,IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO7C,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAAAtB,EAAA,CAhCYD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/State Management/WebsocketPingsContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WebsocketPingsContext = /*#__PURE__*/createContext(undefined);\nexport const WebsocketPingsProvider = children => {\n  _s();\n  const [pingInfo, setPingInfo] = useState();\n  const [socketReady, setSocketReady] = useState(false);\n  const connection = useRef(null);\n  useEffect(() => {\n    const socket = new WebSocket(\"ws://localhost:3001\");\n\n    // Connection opened\n    socket.addEventListener(\"open\", event => {\n      socket.send(\"Connection established\");\n    });\n\n    // Listen for messages\n    socket.addEventListener(\"message\", event => {\n      console.log(\"Message from server \", event.data);\n    });\n    connection.current = socket;\n    return () => connection.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WebsocketPingsContext.Provider, {\n    value: {\n      pingInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(WebsocketPingsProvider, \"nOJDllVQFvG5cBb7PtglA0pPf5k=\");\n_c = WebsocketPingsProvider;\nvar _c;\n$RefreshReg$(_c, \"WebsocketPingsProvider\");","map":{"version":3,"names":["createContext","useEffect","useRef","useState","jsxDEV","_jsxDEV","WebsocketPingsContext","undefined","WebsocketPingsProvider","children","_s","pingInfo","setPingInfo","socketReady","setSocketReady","connection","socket","WebSocket","addEventListener","event","send","console","log","data","current","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samuelhoile/Documents/Visual Studio Code Projects/Ping Tool/frontend/src/State Management/WebsocketPingsContext.tsx"],"sourcesContent":["import { createContext, useEffect, useRef, useState } from \"react\";\n\nexport type PingResult = {\n    id: number;\n    ping: number;\n}\n\nexport type WebsocketPingsContextType = {\n    pingInfo: PingResult[] | undefined;\n    \n}\n\nexport const WebsocketPingsContext = createContext<WebsocketPingsContextType | undefined>(undefined)\n\n\nexport const WebsocketPingsProvider = (children: React.ReactNode) => {\n    const [pingInfo, setPingInfo] = useState<PingResult[] | undefined>();\n    const [socketReady, setSocketReady] = useState(false)\n    \n    const connection = useRef(null)\n\n    useEffect(() => {\n        const socket = new WebSocket(\"ws://localhost:3001\")\n    \n        // Connection opened\n        socket.addEventListener(\"open\", (event) => {\n          socket.send(\"Connection established\")\n        })\n    \n        // Listen for messages\n        socket.addEventListener(\"message\", (event) => {\n          console.log(\"Message from server \", event.data)\n        })\n    \n        connection.current = socket\n    \n        return () => connection.close()\n      }, [])\n\n\n    return (\n        <WebsocketPingsContext.Provider value={{ pingInfo }}>\n            {children}\n        </WebsocketPingsContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYnE,OAAO,MAAMC,qBAAqB,gBAAGN,aAAa,CAAwCO,SAAS,CAAC;AAGpG,OAAO,MAAMC,sBAAsB,GAAIC,QAAyB,IAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAA2B,CAAC;EACpE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMY,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACZ,MAAMe,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAEnD;IACAD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAGC,KAAK,IAAK;MACzCH,MAAM,CAACI,IAAI,CAAC,wBAAwB,CAAC;IACvC,CAAC,CAAC;;IAEF;IACAJ,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;MAC5CE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,KAAK,CAACI,IAAI,CAAC;IACjD,CAAC,CAAC;IAEFR,UAAU,CAACS,OAAO,GAAGR,MAAM;IAE3B,OAAO,MAAMD,UAAU,CAACU,KAAK,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAGR,oBACIpB,OAAA,CAACC,qBAAqB,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEhB;IAAS,CAAE;IAAAF,QAAA,EAC/CA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEzC,CAAC;AAAArB,EAAA,CA9BYF,sBAAsB;AAAAwB,EAAA,GAAtBxB,sBAAsB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}